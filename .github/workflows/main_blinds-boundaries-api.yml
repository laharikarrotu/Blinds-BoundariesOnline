# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - blinds-boundaries-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip and setuptools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel build
      
      - name: Install dependencies
        run: |
          pip install --upgrade setuptools wheel
          pip install -r requirements.txt --no-cache-dir
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: |
          # Create a clean deployment directory
          mkdir -p deployment
          
          # Copy root-level files (main.py, startup.sh, requirements.txt, etc.)
          cp main.py deployment/ 2>/dev/null || echo "main.py not found in root"
          cp startup.sh deployment/ 2>/dev/null || echo "startup.sh not found in root"
          cp requirements.txt deployment/ 2>/dev/null || echo "requirements.txt not found in root"
          
          # Copy app directory contents
          cp -r app/* deployment/
          
          # Copy other necessary directories
          cp -r blinds deployment/ 2>/dev/null || echo "blinds directory not found"
          cp -r models deployment/ 2>/dev/null || echo "models directory not found"
          
          # Create necessary directories
          mkdir -p deployment/uploads deployment/masks deployment/results
          
          # List what we're deploying
          echo "Files to be deployed:"
          ls -la deployment/
          
          # Zip the deployment directory
          cd deployment
          zip -r ../release.zip ./*
          cd ..

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_35AB600D43D74C60ADA2AC4E65A0CE8D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_276A866638E34B1B8C84C7D98077FC2B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3005D1EF01714D65931D987B4E4C731A }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'blinds-boundaries-api'
          slot-name: 'Production'
          